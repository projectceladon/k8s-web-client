#!/usr/bin/env python3
# author: linfang.he
#
# Copyright (C) 2018 Intel Corporation.
#
# This software and the related documents are Intel copyrighted materials,
# and your use of them is governed by the express license under which they
# were provided to you (End User License Agreement for the Intel(R) Software
# Development Products (Version September 2018)). Unless the License provides
# otherwise, you may not use, modify, copy, publish, distribute, disclose or
# transmit this software or the related documents without Intel's prior
# written permission.
#
# This software and the related documents are provided as is, with no
# express or implied warranties, other than those that are expressly
# stated in the License.
#

import os
import json
import time
import colorama
from colorama import Fore, Style

while True: 
    out = os.popen("curl -k https://localhost:5000/v2/android/tags/list")
    text = out.read()[:-1] # ignore '/n'
    out.close()
    imgs = json.loads(text)['tags']
    postfix = "-houdini"

    for img in imgs:
        new_img = img + postfix
        if img == 'latest' or img[-8:] == postfix or new_img in imgs:
            continue
        
        # update to Houdini version
        if os.system("docker pull localhost:5000/android:" + img):
            f = open("log.txt", "w")
            f.write(time.asctime(time.localtime(time.time())) + " Docker pull error for " + img + "\n")
            f.close()
            continue
        if os.system("docker build --build-arg IMG_NAME=" + img + " -t localhost:5000/android:" + new_img + " ."):
            f = open("log.txt", "w")
            f.write(time.asctime(time.localtime(time.time())) + " Docker build error for " + new_img + "\n") # + Style.RESET_ALL)
            f.close()
            continue
        if os.system("docker push localhost:5000/android:" + new_img):
            f = open("log.txt", "w")
            f.write(time.asctime(time.localtime(time.time())) + " Docker push error for " + new_img + "\n") # + Style.RESET_ALL)
            f.close()
            continue
        os.system("docker rmi localhost:5000/android:" + new_img)
        os.system("docker rmi localhost:5000/android:" + img)

    time.sleep(5)
