# Default values for aic-manager.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# replicaCount: 1

image:
  repository:  aosp-aic-dockerserver.sh.intel.com:5000/aic-manager
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

initContainers:
- name: umount-lxcfs
  image: busybox:1.28
  securityContext:
    privileged: true
  command: ['sh', '-c', 'echo "umount" && umount /run/k8s/aic_manager_lxcfs || true']
  volumeMounts:
  - name: host-run
    mountPath: /run
    mountPropagation: Bidirectional

env:
- name: K8S_ENV
  value: "true"
- name: ENV_USE_HUGE_PAGE
  value: ""
- name: CPU_ALLOC_ALGORITHM
  value: 
- name: THREADS_PER_POOL
  value: ""
- name: INSTANCE_PER_POOL
  value: ""
- name: SHARED_INSTANCES
  value: ""
- name: CORES_MONOPOLY
  value: "1"

volumeMounts:
- name: lib-modules
  mountPath: /lib/modules
- name: usr-src
  mountPath: /usr/src
- name: opt
  mountPath: /opt
- name: aic-manager-status
  mountPath: /status
- name: host-cgroup
  mountPath: /sys/fs/cgroup
- name: aic-manager-lxcfs
  mountPath: /var/lib/lxcfs
  mountPropagation: Bidirectional
- name: aic-manager-hugetlbfs
  mountPath: /hugetlbfs
  mountPropagation: Bidirectional
- name: resource-allocate
  mountPath: /res-alloc

volumes:
- name: lib-modules
  hostPath:
    path: /lib/modules
- name: usr-src
  hostPath:
    path: /usr/src
- name: opt
  hostPath:
    path: /opt
- name: aic-manager-status
  hostPath:
    path: /run/k8s/aic_manager_status
    type: DirectoryOrCreate
- name: host-cgroup
  hostPath:
    path: /sys/fs/cgroup
- name: aic-manager-lxcfs
  hostPath:
    path: /run/k8s/aic_manager_lxcfs
    type: DirectoryOrCreate
- name: aic-manager-hugetlbfs
  hostPath:
    path: /run/k8s/hugetlbfs
    type: DirectoryOrCreate
- name: resource-allocate
  hostPath:
    path: /run/k8s/res-alloc
    type: DirectoryOrCreate
- name: host-run
  hostPath:
    path: /run
    type: DirectoryOrCreate

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: 
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
  privileged: true

volumeMounts:
- name: lib-modules
  mountPath: /lib/modules
- name: usr-src
  mountPath: /usr/src
- name: opt
  mountPath: /opt
- name: aic-manager-status
  mountPath: /status
- name: host-cgroup
  mountPath: /sys/fs/cgroup
- name: aic-manager-lxcfs
  mountPath: /var/lib/lxcfs
  mountPropagation: Bidirectional
- name: aic-manager-hugetlbfs
  mountPath: /hugetlbfs
  mountPropagation: Bidirectional
- name: resource-allocate
  mountPath: /res-alloc

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: 
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  requests:
    memory: "100Mi"
  limits:
    memory: "4Gi"

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: 
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
      - matchExpressions:
        - key: GPU-type
          operator: Exists
