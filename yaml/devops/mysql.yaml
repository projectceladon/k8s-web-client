apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: "$NAMESPACE"
spec:
  type: ClusterIP
  ports:
  - port: 3306
  selector:
    app: mysql
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: "$NAMESPACE"
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: Exists
      initContainers:
      - name: init-mysql
        image: busybox:1.28
        command:
        - sh
        - "-c"
        - |
          if [ -e "/var/lib/mysql/lost+found" ]; then
            rm -rf "/var/lib/mysql/lost+found"
          fi
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      containers:
      - image: mysql:5.7
        name: mysql
        env:
          # Use secret in real usage
        - name: MYSQL_ROOT_PASSWORD
          value: intelotc
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
        readinessProbe:
          exec:
            command:
            - mysql
            - -u
            - root
            - --password=intelotc
            - -e
            - 'status'
          initialDelaySeconds: 10
          periodSeconds: 10
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim
